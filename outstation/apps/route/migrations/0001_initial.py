# Generated by Django 2.0.13 on 2019-06-22 07:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtailmetadata.models
import wagtailschemaorg.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('outstationcore', '0001_initial'),
        ('wagtailimages', '0001_squashed_0021'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
    ]

    operations = [
        migrations.CreateModel(
            name='DestinationTouristPlaces',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OnRouteTouristPlaces',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('distance_from_origin', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Distance From Origin (km)')),
                ('detour', models.CharField(blank=True, max_length=255, null=True, verbose_name='Detour via')),
                ('detour_distance', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Distance from main route (km)')),
                ('amenities', wagtail.core.fields.StreamField([('amenity', wagtail.core.blocks.StructBlock([('amenity_type', wagtail.core.blocks.ChoiceBlock(choices=[('Lodging', 'Lodging'), ('Petrol Pump', 'Petrol Pump'), ('Eating Place', 'Eating Place')])), ('location', wagtail.core.blocks.CharBlock(required=True))]))], blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OutstationRoutePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('banner_title', wagtail.core.fields.RichTextField()),
                ('origin_display_name', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('destination_display_name', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('road_condition_rating', models.PositiveSmallIntegerField()),
                ('highway', models.CharField(max_length=255)),
                ('total_distance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total distance (km)')),
                ('canonical_url', models.URLField(help_text='Canonical url for this page', null=True)),
                ('robots_tag', models.CharField(blank=True, max_length=100, null=True)),
                ('excerpt', models.CharField(blank=True, max_length=100, null=True)),
                ('banner_image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
                ('destination', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='route_destination', to='outstationcore.Place')),
                ('likes', models.ManyToManyField(blank=True, related_name='likes', to=settings.AUTH_USER_MODEL)),
                ('origin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='route_origin', to='outstationcore.Place')),
                ('search_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Search image')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtailmetadata.models.MetadataMixin, wagtailschemaorg.models.PageLDMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='RouteInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('information', wagtail.core.fields.RichTextField(help_text='Add information with heading')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_information', to='outstationroute.OutstationRoutePage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='onroutetouristplaces',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='on_route_places', to='outstationroute.OutstationRoutePage'),
        ),
        migrations.AddField(
            model_name='onroutetouristplaces',
            name='place',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='outstationcore.Place'),
        ),
        migrations.AddField(
            model_name='destinationtouristplaces',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='destination_places', to='outstationroute.OutstationRoutePage'),
        ),
        migrations.AddField(
            model_name='destinationtouristplaces',
            name='place',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='outstationcore.Place'),
        ),
        migrations.AlterUniqueTogether(
            name='onroutetouristplaces',
            unique_together={('page', 'place')},
        ),
        migrations.AlterUniqueTogether(
            name='destinationtouristplaces',
            unique_together={('page', 'place')},
        ),
    ]
